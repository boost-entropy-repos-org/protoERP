/*
 * copyright 2013-2020
 * codebb.gr
 * ProtoERP - Open source invocing program
 * info@codebb.gr
 */
/*
 * Changelog
 * =========
 * 20/10/2020 (georgemoralis) - Added exception handling for generic issues
 */
package gr.codebb.lib.util;

import gr.codebb.dlg.AlertDlg;
import gr.codebb.protoerp.issues.GenericIssueView;
import java.lang.Thread.UncaughtExceptionHandler;
import javafx.application.Platform;
import javafx.scene.Scene;
import javafx.scene.control.ButtonType;
import javafx.stage.Modality;
import javafx.stage.Stage;

public class DialogExceptionHandler implements UncaughtExceptionHandler {

  private long lastMessage = 0;

  @Override
  public void uncaughtException(final Thread aThread, final Throwable aThrowable) {
    Platform.runLater(
        () -> {
          informUser(aThrowable);
        });
  }

  protected void informUser(Throwable aThrowable) {
    try {
      final long previousMessage = lastMessage;
      lastMessage = System.currentTimeMillis();
      if (lastMessage - previousMessage < 50) {
        return;
      }
      String exceptionText = ExceptionUtil.exceptionToString(aThrowable);
      ButtonType response =
          AlertDlg.create()
              .message(
                  "Δημιουργήθηκε κάποιο πρόβλημα\nTo πιθανότερο είναι να μην υπάρχει πρόβλημα με την εκτέλεση του προγράμματος\nΕπιθυμείτε να στείλετε το report στην codebb για περαιτέρω διερεύνηση?")
              .title("Αποστολή προτάσεων/προβλημάτων")
              .modality(Modality.APPLICATION_MODAL)
              .showAndWaitConfirm();

      if (response == ButtonType.OK) {
        FxmlUtil.LoadResult<GenericIssueView> GenericIssue =
            FxmlUtil.load("/fxml/issues/GenericIssue.fxml");
        GenericIssue.getController().setTitle("AutoGenerated UncaughtException issue");
        GenericIssue.getController().setDetail(exceptionText);
        Stage stage =
            StageUtil.setStageSettings(
                "Αποστολή προτάσεων/προβλημάτων",
                new Scene(GenericIssue.getParent()),
                Modality.APPLICATION_MODAL,
                null,
                null,
                "/img/protoerp.png");
        stage.setResizable(false);
        stage.show();
      }
    } catch (final Throwable t) {
      // Exceptions must not escape this function.
      t.printStackTrace(System.err);
    }
  }
}
